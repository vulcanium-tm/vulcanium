package dev.vulcanium.tag;

import dev.vulcanium.Material;
import dev.vulcanium.namespaced.NamespacedKey;

public class MaterialTags {
    public static final MaterialSetTag ARROWS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("arrows"), new Material[0])).endsWith("ARROW")).ensureSize("ARROWS", 3)).lock();
    public static final MaterialSetTag BEDS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("beds"), new Material[0])).endsWith("_BED")).ensureSize("BEDS", 16)).lock();
    public static final MaterialSetTag BUCKETS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("buckets"), new Material[0])).endsWith("BUCKET")).ensureSize("BUCKETS", 11)).lock();
    public static final MaterialSetTag COALS;
    public static final MaterialSetTag COBBLESTONE_WALLS;
    public static final MaterialSetTag COBBLESTONES;
    public static final MaterialSetTag CONCRETES;
    public static final MaterialSetTag CONCRETE_POWDER;
    public static final MaterialSetTag COOKED_FISH;
    public static final MaterialSetTag DOORS;
    public static final MaterialSetTag DYES;
    public static final MaterialSetTag FENCE_GATES;
    public static final MaterialSetTag FENCES;
    public static final MaterialSetTag FISH_BUCKETS;
    public static final MaterialSetTag GLASS;
    public static final MaterialSetTag GLASS_PANES;
    public static final MaterialSetTag GLAZED_TERRACOTTA;
    public static final MaterialSetTag STAINED_TERRACOTTA;
    public static final MaterialSetTag TERRACOTTA;
    public static final MaterialSetTag GOLDEN_APPLES;
    public static final MaterialSetTag HORSE_ARMORS;
    public static final MaterialSetTag INFESTED_BLOCKS;
    public static final MaterialSetTag MUSHROOM_BLOCKS;
    public static final MaterialSetTag MUSHROOMS;
    public static final MaterialSetTag MUSIC_DISCS;
    public static final MaterialSetTag ORES;
    public static final MaterialSetTag PISTONS;
    public static final MaterialSetTag POTATOES;
    public static final MaterialSetTag PRESSURE_PLATES;
    public static final MaterialSetTag PRISMARINE;
    public static final MaterialSetTag PRISMARINE_SLABS;
    public static final MaterialSetTag PRISMARINE_STAIRS;
    public static final MaterialSetTag PUMPKINS;
    public static final MaterialSetTag QUARTZ_BLOCKS;
    public static final MaterialSetTag RAW_FISH;
    public static final MaterialSetTag RED_SANDSTONES;
    public static final MaterialSetTag SANDSTONES;
    public static final MaterialSetTag SPONGES;
    public static final MaterialSetTag SHULKER_BOXES;
    public static final MaterialSetTag SKULLS;
    public static final MaterialSetTag SPAWN_EGGS;
    public static final MaterialSetTag STAINED_GLASS;
    public static final MaterialSetTag STAINED_GLASS_PANES;
    public static final MaterialSetTag TRAPDOORS;
    public static final MaterialSetTag WOODEN_DOORS;
    public static final MaterialSetTag WOODEN_FENCES;
    public static final MaterialSetTag WOODEN_TRAPDOORS;
    public static final MaterialSetTag WOODEN_GATES;
    public static final MaterialSetTag PURPUR;
    public static final MaterialSetTag SIGNS;
    public static final MaterialSetTag TORCH;
    public static final MaterialSetTag REDSTONE_TORCH;
    public static final MaterialSetTag SOUL_TORCH;
    public static final MaterialSetTag TORCHES;
    public static final MaterialSetTag LANTERNS;
    public static final MaterialSetTag RAILS;
    public static final MaterialSetTag SWORDS;
    public static final MaterialSetTag SHOVELS;
    public static final MaterialSetTag PICKAXES;
    public static final MaterialSetTag AXES;
    public static final MaterialSetTag HOES;
    public static final MaterialSetTag HELMETS;
    public static final MaterialSetTag HEAD_EQUIPPABLE;
    public static final MaterialSetTag CHESTPLATES;
    public static final MaterialSetTag CHEST_EQUIPPABLE;
    public static final MaterialSetTag LEGGINGS;
    public static final MaterialSetTag BOOTS;
    public static final MaterialSetTag ARMOR;
    public static final MaterialSetTag BOWS;
    public static final MaterialSetTag THROWABLE_PROJECTILES;
    public static final MaterialSetTag COLORABLE;
    public static final MaterialSetTag CORAL;
    public static final MaterialSetTag CORAL_FANS;
    public static final MaterialSetTag CORAL_BLOCKS;
    public static final MaterialSetTag ENCHANTABLE;
    public static final MaterialSetTag RAW_ORES;
    public static final MaterialSetTag DEEPSLATE_ORES;
    public static final MaterialSetTag RAW_ORE_BLOCKS;
    public static final MaterialSetTag OXIDIZED_COPPER_BLOCKS;
    public static final MaterialSetTag WEATHERED_COPPER_BLOCKS;
    public static final MaterialSetTag EXPOSED_COPPER_BLOCKS;
    public static final MaterialSetTag UNAFFECTED_COPPER_BLOCKS;
    public static final MaterialSetTag WAXED_COPPER_BLOCKS;
    public static final MaterialSetTag UNWAXED_COPPER_BLOCKS;
    public static final MaterialSetTag COPPER_BLOCKS;
    public static final MaterialSetTag FULL_COPPER_BLOCKS;
    public static final MaterialSetTag CUT_COPPER_BLOCKS;
    public static final MaterialSetTag CUT_COPPER_STAIRS;
    public static final MaterialSetTag CUT_COPPER_SLABS;
    public static final MaterialSetTag WOODEN_TOOLS;
    public static final MaterialSetTag STONE_TOOLS;
    public static final MaterialSetTag IRON_TOOLS;
    public static final MaterialSetTag GOLDEN_TOOLS;
    public static final MaterialSetTag DIAMOND_TOOLS;
    public static final MaterialSetTag NETHERITE_TOOLS;

    public MaterialTags() {
    }

    private static NamespacedKey keyFor(String key) {
        return new NamespacedKey("paper", key + "_settag");
    }

    static {
        COALS = (MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("coals"), new Material[0])).add(new Material[]{Material.COAL, Material.CHARCOAL})).lock();
        COBBLESTONE_WALLS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("cobblestone_walls"), new Material[0])).endsWith("COBBLESTONE_WALL")).ensureSize("COBBLESTONE_WALLS", 2)).lock();
        COBBLESTONES = (MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("cobblestones"), new Material[0])).add(new Material[]{Material.COBBLESTONE, Material.MOSSY_COBBLESTONE})).lock();
        CONCRETES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("concretes"), new Material[0])).endsWith("_CONCRETE")).ensureSize("CONCRETES", 16)).lock();
        CONCRETE_POWDER = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("concrete_powder"), new Material[0])).endsWith("_CONCRETE_POWDER")).ensureSize("CONCRETE_POWDER", 16)).lock();
        COOKED_FISH = (MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("cooked_fish"), new Material[0])).add(new Material[]{Material.COOKED_COD, Material.COOKED_SALMON})).lock();
        DOORS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("doors"), new Material[0])).endsWith("_DOOR")).ensureSize("DOORS", 20)).lock();
        DYES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("dyes"), new Material[0])).endsWith("_DYE")).ensureSize("DYES", 16)).lock();
        FENCE_GATES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("fence_gates"), new Material[0])).endsWith("_GATE")).ensureSize("FENCE_GATES", 11)).lock();
        FENCES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("fences"), new Material[0])).endsWith("_FENCE")).ensureSize("FENCES", 12)).lock();
        FISH_BUCKETS = (MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("fish_buckets"), new Material[0])).add(new Material[]{Material.COD_BUCKET, Material.PUFFERFISH_BUCKET, Material.SALMON_BUCKET, Material.TROPICAL_FISH_BUCKET})).lock();
        GLASS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("glass"), new Material[0])).endsWith("_GLASS")).add(new Material[]{Material.GLASS})).ensureSize("GLASS", 18)).lock();
        GLASS_PANES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("glass_panes"), new Material[0])).endsWith("GLASS_PANE")).ensureSize("GLASS_PANES", 17)).lock();
        GLAZED_TERRACOTTA = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("glazed_terracotta"), new Material[0])).endsWith("GLAZED_TERRACOTTA")).ensureSize("GLAZED_TERRACOTTA", 16)).lock();
        STAINED_TERRACOTTA = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("stained_terracotta"), new Material[0])).endsWith("TERRACOTTA")).not(new Material[]{Material.TERRACOTTA})).notEndsWith("GLAZED_TERRACOTTA")).ensureSize("STAINED_TERRACOTTA", 16)).lock();
        TERRACOTTA = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("terracotta"), new Material[0])).endsWith("TERRACOTTA")).ensureSize("TERRACOTTA", 33)).lock();
        GOLDEN_APPLES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("golden_apples"), new Material[0])).endsWith("GOLDEN_APPLE")).ensureSize("GOLDEN_APPLES", 2)).lock();
        HORSE_ARMORS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("horse_armors"), new Material[0])).endsWith("_HORSE_ARMOR")).ensureSize("HORSE_ARMORS", 4)).lock();
        INFESTED_BLOCKS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("infested_blocks"), new Material[0])).startsWith("INFESTED_")).ensureSize("INFESTED_BLOCKS", 7)).lock();
        MUSHROOM_BLOCKS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("mushroom_blocks"), new Material[0])).endsWith("MUSHROOM_BLOCK")).add(new Material[]{Material.MUSHROOM_STEM})).ensureSize("MUSHROOM_BLOCKS", 3)).lock();
        MUSHROOMS = (MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("mushrooms"), new Material[0])).add(new Material[]{Material.BROWN_MUSHROOM, Material.RED_MUSHROOM})).lock();
        MUSIC_DISCS = (MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("music_discs"), new Material[0])).startsWith("MUSIC_DISC_")).lock();
        ORES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("ores"), new Material[0])).add(new Material[]{Material.ANCIENT_DEBRIS})).endsWith("_ORE")).ensureSize("ORES", 19)).lock();
        PISTONS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("pistons"), new Material[0])).contains("PISTON")).ensureSize("PISTONS", 4)).lock();
        POTATOES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("potatoes"), new Material[0])).endsWith("POTATO")).ensureSize("POTATOES", 3)).lock();
        PRESSURE_PLATES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("pressure_plates"), new Material[0])).endsWith("_PRESSURE_PLATE")).ensureSize("PRESSURE_PLATES", 15)).lock();
        PRISMARINE = (MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("prismarine"), new Material[0])).add(new Material[]{Material.PRISMARINE, Material.PRISMARINE_BRICKS, Material.DARK_PRISMARINE})).lock();
        PRISMARINE_SLABS = (MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("prismarine_slabs"), new Material[0])).add(new Material[]{Material.PRISMARINE_SLAB, Material.PRISMARINE_BRICK_SLAB, Material.DARK_PRISMARINE_SLAB})).lock();
        PRISMARINE_STAIRS = (MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("prismarine_stairs"), new Material[0])).add(new Material[]{Material.PRISMARINE_STAIRS, Material.PRISMARINE_BRICK_STAIRS, Material.DARK_PRISMARINE_STAIRS})).lock();
        PUMPKINS = (MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("pumpkins"), new Material[0])).add(new Material[]{Material.CARVED_PUMPKIN, Material.JACK_O_LANTERN, Material.PUMPKIN})).lock();
        QUARTZ_BLOCKS = (MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("quartz_blocks"), new Material[0])).add(new Material[]{Material.QUARTZ_BLOCK, Material.QUARTZ_PILLAR, Material.CHISELED_QUARTZ_BLOCK, Material.SMOOTH_QUARTZ})).lock();
        RAW_FISH = (MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("raw_fish"), new Material[0])).add(new Material[]{Material.COD, Material.PUFFERFISH, Material.SALMON, Material.TROPICAL_FISH})).lock();
        RED_SANDSTONES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("red_sandstones"), new Material[0])).endsWith("RED_SANDSTONE")).ensureSize("RED_SANDSTONES", 4)).lock();
        SANDSTONES = (MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("sandstones"), new Material[0])).add(new Material[]{Material.SANDSTONE, Material.CHISELED_SANDSTONE, Material.CUT_SANDSTONE, Material.SMOOTH_SANDSTONE})).lock();
        SPONGES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("sponges"), new Material[0])).endsWith("SPONGE")).ensureSize("SPONGES", 2)).lock();
        SHULKER_BOXES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("shulker_boxes"), new Material[0])).endsWith("SHULKER_BOX")).ensureSize("SHULKER_BOXES", 17)).lock();
        SKULLS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("skulls"), new Material[0])).endsWith("_HEAD")).endsWith("_SKULL")).not(new Material[]{Material.PISTON_HEAD})).ensureSize("SKULLS", 14)).lock();
        SPAWN_EGGS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("spawn_eggs"), new Material[0])).endsWith("_SPAWN_EGG")).ensureSize("SPAWN_EGGS", 78)).lock();
        STAINED_GLASS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("stained_glass"), new Material[0])).endsWith("_STAINED_GLASS")).ensureSize("STAINED_GLASS", 16)).lock();
        STAINED_GLASS_PANES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("stained_glass_panes"), new Material[0])).endsWith("STAINED_GLASS_PANE")).ensureSize("STAINED_GLASS_PANES", 16)).lock();
        TRAPDOORS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("trapdoors"), new Material[0])).endsWith("_TRAPDOOR")).ensureSize("TRAPDOORS", 20)).lock();
        WOODEN_DOORS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("wooden_doors"), new Material[0])).endsWith("_DOOR")).not(new Material[]{Material.IRON_DOOR})).notContains("COPPER")).ensureSize("WOODEN_DOORS", 11)).lock();
        WOODEN_FENCES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("wooden_fences"), new Material[0])).endsWith("_FENCE")).not(new Material[]{Material.NETHER_BRICK_FENCE})).ensureSize("WOODEN_FENCES", 11)).lock();
        WOODEN_TRAPDOORS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("wooden_trapdoors"), new Material[0])).endsWith("_TRAPDOOR")).not(new Material[]{Material.IRON_TRAPDOOR})).notContains("COPPER")).ensureSize("WOODEN_TRAPDOORS", 11)).lock();
        WOODEN_GATES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("wooden_gates"), new Material[0])).endsWith("_GATE")).ensureSize("WOODEN_GATES", 11)).lock();
        PURPUR = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("purpur"), new Material[0])).startsWith("PURPUR_")).ensureSize("PURPUR", 4)).lock();
        SIGNS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("signs"), new Material[0])).endsWith("_SIGN")).ensureSize("SIGNS", 44)).lock();
        TORCH = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("torch"), new Material[0])).add(new Material[]{Material.TORCH, Material.WALL_TORCH})).ensureSize("TORCH", 2)).lock();
        REDSTONE_TORCH = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("restone_torch"), new Material[0])).add(new Material[]{Material.REDSTONE_TORCH, Material.REDSTONE_WALL_TORCH})).ensureSize("REDSTONE_TORCH", 2)).lock();
        SOUL_TORCH = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("soul_torch"), new Material[0])).add(new Material[]{Material.SOUL_TORCH, Material.SOUL_WALL_TORCH})).ensureSize("SOUL_TORCH", 2)).lock();
        TORCHES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("torches"), new Material[0])).add(new Tag[]{TORCH, REDSTONE_TORCH, SOUL_TORCH})).ensureSize("TORCHES", 6)).lock();
        LANTERNS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("lanterns"), new Material[0])).add(new Material[]{Material.LANTERN, Material.SOUL_LANTERN})).ensureSize("LANTERNS", 2)).lock();
        RAILS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("rails"), new Material[0])).endsWith("RAIL")).ensureSize("RAILS", 4)).lock();
        SWORDS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("swords"), new Material[0])).endsWith("_SWORD")).ensureSize("SWORDS", 6)).lock();
        SHOVELS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("shovels"), new Material[0])).endsWith("_SHOVEL")).ensureSize("SHOVELS", 6)).lock();
        PICKAXES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("pickaxes"), new Material[0])).endsWith("_PICKAXE")).ensureSize("PICKAXES", 6)).lock();
        AXES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("axes"), new Material[0])).endsWith("_AXE")).ensureSize("AXES", 6)).lock();
        HOES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("hoes"), new Material[0])).endsWith("_HOE")).ensureSize("HOES", 6)).lock();
        HELMETS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("helmets"), new Material[0])).endsWith("_HELMET")).ensureSize("HELMETS", 7)).lock();
        HEAD_EQUIPPABLE = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("head_equippable"), new Material[0])).endsWith("_HELMET")).add(new Tag[]{SKULLS})).add(new Material[]{Material.CARVED_PUMPKIN})).ensureSize("HEAD_EQUIPPABLE", 22)).lock();
        CHESTPLATES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("chestplates"), new Material[0])).endsWith("_CHESTPLATE")).ensureSize("CHESTPLATES", 6)).lock();
        CHEST_EQUIPPABLE = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("chest_equippable"), new Material[0])).endsWith("_CHESTPLATE")).add(new Material[]{Material.ELYTRA})).ensureSize("CHEST_EQUIPPABLE", 7)).lock();
        LEGGINGS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("leggings"), new Material[0])).endsWith("_LEGGINGS")).ensureSize("LEGGINGS", 6)).lock();
        BOOTS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("boots"), new Material[0])).endsWith("_BOOTS")).ensureSize("BOOTS", 6)).lock();
        ARMOR = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("armor"), new Material[0])).add(new Tag[]{HELMETS, CHESTPLATES, LEGGINGS, BOOTS})).ensureSize("ARMOR", 25)).lock();
        BOWS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("bows"), new Material[0])).add(new Material[]{Material.BOW})).add(new Material[]{Material.CROSSBOW})).ensureSize("BOWS", 2)).lock();
        THROWABLE_PROJECTILES = (MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("throwable_projectiles"), new Material[0])).add(new Material[]{Material.EGG, Material.SNOWBALL, Material.SPLASH_POTION, Material.TRIDENT, Material.ENDER_PEARL, Material.EXPERIENCE_BOTTLE, Material.FIREWORK_ROCKET})).lock();
        COLORABLE = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("colorable"), new Material[0])).add(new Tag[]{Tag.WOOL, Tag.CARPETS})).add(new Tag[]{SHULKER_BOXES, STAINED_GLASS, STAINED_GLASS_PANES, CONCRETES, BEDS})).lock();
        CORAL = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("coral"), new Material[0])).endsWith("_CORAL")).ensureSize("CORAL", 10)).lock();
        CORAL_FANS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("coral_fans"), new Material[0])).endsWith("_CORAL_FAN")).endsWith("_CORAL_WALL_FAN")).ensureSize("CORAL_FANS", 20)).lock();
        CORAL_BLOCKS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("coral_blocks"), new Material[0])).endsWith("_CORAL_BLOCK")).ensureSize("CORAL_BLOCKS", 10)).lock();
        ENCHANTABLE = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("enchantable"), new Material[0])).add(new Tag[]{PICKAXES, SWORDS, SHOVELS, AXES, HOES, HELMETS, CHEST_EQUIPPABLE, LEGGINGS, BOOTS, BOWS})).add(new Material[]{Material.TRIDENT, Material.SHIELD, Material.FISHING_ROD, Material.SHEARS, Material.FLINT_AND_STEEL, Material.CARROT_ON_A_STICK, Material.WARPED_FUNGUS_ON_A_STICK, Material.BRUSH, Material.CARVED_PUMPKIN, Material.COMPASS, Material.SKELETON_SKULL, Material.WITHER_SKELETON_SKULL, Material.PLAYER_HEAD, Material.ZOMBIE_HEAD, Material.CREEPER_HEAD, Material.DRAGON_HEAD, Material.PIGLIN_HEAD})).ensureSize("ENCHANTABLE", 75)).lock();
        RAW_ORES = (MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("raw_ores"), new Material[0])).add(new Material[]{Material.RAW_COPPER, Material.RAW_GOLD, Material.RAW_IRON})).lock();
        DEEPSLATE_ORES = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("deepslate_ores"), new Material[0])).add((material) -> {
            return material.name().startsWith("DEEPSLATE_") && material.name().endsWith("_ORE");
        })).ensureSize("DEEPSLATE_ORES", 8)).lock();
        RAW_ORE_BLOCKS = (MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("raw_ore_blocks"), new Material[0])).add(new Material[]{Material.RAW_COPPER_BLOCK, Material.RAW_GOLD_BLOCK, Material.RAW_IRON_BLOCK})).lock();
        OXIDIZED_COPPER_BLOCKS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("oxidized_copper_blocks"), new Material[0])).startsWith("OXIDIZED_")).startsWith("WAXED_OXIDIZED_")).ensureSize("OXIDIZED_COPPER_BLOCKS", 18)).lock();
        WEATHERED_COPPER_BLOCKS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("weathered_copper_blocks"), new Material[0])).startsWith("WEATHERED_")).startsWith("WAXED_WEATHERED_")).ensureSize("WEATHERED_COPPER_BLOCKS", 18)).lock();
        EXPOSED_COPPER_BLOCKS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("exposed_copper_blocks"), new Material[0])).startsWith("EXPOSED_")).startsWith("WAXED_EXPOSED_")).ensureSize("EXPOSED_COPPER_BLOCKS", 18)).lock();
        UNAFFECTED_COPPER_BLOCKS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("unaffected_copper_blocks"), new Material[0])).startsWith("CUT_COPPER")).startsWith("WAXED_CUT_COPPER")).startsWith("WAXED_COPPER_")).startsWith("COPPER_")).add(new Material[]{Material.CHISELED_COPPER, Material.WAXED_CHISELED_COPPER})).not(new Material[]{Material.COPPER_INGOT, Material.COPPER_ORE})).ensureSize("UNAFFECTED_COPPER_BLOCKS", 18)).lock();
        WAXED_COPPER_BLOCKS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("waxed_copper_blocks"), new Material[0])).add((m) -> {
            return m.name().startsWith("WAXED_") && m.name().contains("COPPER");
        })).ensureSize("WAXED_COPPER_BLOCKS", 36)).lock();
        UNWAXED_COPPER_BLOCKS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("unwaxed_copper_blocks"), new Material[0])).startsWith("EXPOSED_")).startsWith("WEATHERED_")).startsWith("OXIDIZED_")).startsWith("CUT_COPPER")).add(new Material[]{Material.COPPER_BLOCK, Material.CHISELED_COPPER, Material.COPPER_DOOR, Material.COPPER_TRAPDOOR, Material.COPPER_GRATE, Material.COPPER_BULB})).ensureSize("UNWAXED_COPPER_BLOCKS", 36)).lock();
        COPPER_BLOCKS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("copper_blocks"), new Material[0])).add(new Tag[]{WAXED_COPPER_BLOCKS})).add(new Tag[]{UNWAXED_COPPER_BLOCKS})).ensureSize("COPPER_BLOCKS", 72)).lock();
        FULL_COPPER_BLOCKS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("full_copper_blocks"), new Material[0])).endsWith("OXIDIZED_COPPER")).endsWith("WEATHERED_COPPER")).endsWith("EXPOSED_COPPER")).endsWith("COPPER_BLOCK")).not(new Material[]{Material.RAW_COPPER_BLOCK})).ensureSize("FULL_COPPER_BLOCKS", 8)).lock();
        CUT_COPPER_BLOCKS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("cut_copper_blocks"), new Material[0])).endsWith("CUT_COPPER")).ensureSize("CUT_COPPER_BLOCKS", 8)).lock();
        CUT_COPPER_STAIRS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("cut_copper_stairs"), new Material[0])).endsWith("CUT_COPPER_STAIRS")).ensureSize("CUT_COPPER_STAIRS", 8)).lock();
        CUT_COPPER_SLABS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("cut_copper_slabs"), new Material[0])).endsWith("CUT_COPPER_SLAB")).ensureSize("CUT_COPPER_SLABS", 8)).lock();
        WOODEN_TOOLS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("wooden_tools"), new Material[0])).add(new Material[]{Material.WOODEN_AXE, Material.WOODEN_HOE, Material.WOODEN_PICKAXE, Material.WOODEN_SHOVEL, Material.WOODEN_SWORD})).ensureSize("WOODEN_TOOLS", 5)).lock();
        STONE_TOOLS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("stone_tools"), new Material[0])).add(new Material[]{Material.STONE_AXE, Material.STONE_HOE, Material.STONE_PICKAXE, Material.STONE_SHOVEL, Material.STONE_SWORD})).ensureSize("STONE_TOOLS", 5)).lock();
        IRON_TOOLS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("iron_tools"), new Material[0])).add(new Material[]{Material.IRON_AXE, Material.IRON_HOE, Material.IRON_PICKAXE, Material.IRON_SHOVEL, Material.IRON_SWORD})).ensureSize("IRON_TOOLS", 5)).lock();
        GOLDEN_TOOLS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("golden_tools"), new Material[0])).add(new Material[]{Material.GOLDEN_AXE, Material.GOLDEN_HOE, Material.GOLDEN_PICKAXE, Material.GOLDEN_SHOVEL, Material.GOLDEN_SWORD})).ensureSize("GOLDEN_TOOLS", 5)).lock();
        DIAMOND_TOOLS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("diamond_tools"), new Material[0])).add(new Material[]{Material.DIAMOND_AXE, Material.DIAMOND_HOE, Material.DIAMOND_PICKAXE, Material.DIAMOND_SHOVEL, Material.DIAMOND_SWORD})).ensureSize("DIAMOND_TOOLS", 5)).lock();
        NETHERITE_TOOLS = (MaterialSetTag)((MaterialSetTag)((MaterialSetTag)(new MaterialSetTag(keyFor("netherite_tools"), new Material[0])).add(new Material[]{Material.NETHERITE_AXE, Material.NETHERITE_HOE, Material.NETHERITE_PICKAXE, Material.NETHERITE_SHOVEL, Material.NETHERITE_SWORD})).ensureSize("NETHERITE_TOOLS", 5)).lock();
    }
}
